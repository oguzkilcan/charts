apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "plex.fullname" . }}
  labels:
    {{- include "plex.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "plex.fullname" . }}
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "plex.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "plex.selectorLabels" . | nindent 8 }}
      {{- if .Values.extraEnv }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "plex.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.extraEnv }}
          envFrom:
            - configMapRef:
                name: {{ include "plex.fullname" . }}
          {{- end }}
          ports:
            - name: http
              containerPort: 32400
              protocol: TCP
            - name: plex-3005
              containerPort: 3005
              protocol: TCP
            - name: plex-8324
              containerPort: 8324
              protocol: TCP
            - name: plex-32469
              containerPort: 32469
              protocol: TCP
            - name: plex-1900
              containerPort: 1900
              protocol: UDP
            - name: plex-32410
              containerPort: 32410
              protocol: UDP
            - name: plex-32412
              containerPort: 32412
              protocol: UDP
            - name: plex-32413
              containerPort: 32413
              protocol: UDP
            - name: plex-32414
              containerPort: 32414
              protocol: UDP
          readinessProbe:
            httpGet:
              path: /identity
              port: http
            initialDelaySeconds: 30
          livenessProbe:
            httpGet:
              path: /identity
              port: http
            initialDelaySeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /transcode
              name: transcode
            - mountPath: /config
              name: config
            - mountPath: /data
              name: data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        {{- if and .Values.persistence.data.enabled .Values.persistence.data.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.data.existingClaim }}
        {{- else if not .Values.persistence.data.enabled }}
          emptyDir: {}
        {{- end }}
        {{- if and .Values.persistence.config.enabled .Values.persistence.config.existingClaim }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.config.existingClaim }}
        {{- else if not .Values.persistence.config.enabled }}
          emptyDir: {}
        {{- end }}
        - name: transcode
          emptyDir: {}
{{- if or (and .Values.persistence.data.enabled (not .Values.persistence.data.existingClaim)) (and .Values.persistence.config.enabled (not .Values.persistence.config.existingClaim)) }}
  volumeClaimTemplates:
  {{- if and .Values.persistence.data.enabled (not .Values.persistence.data.existingClaim) }}
    - metadata:
        name: data
      {{- with .Values.persistence.data.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.data.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.data.size | quote }}
      {{- if .Values.persistence.data.storageClass }}
      {{- if (eq "-" .Values.persistence.data.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.data.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
  {{- if and .Values.persistence.config.enabled (not .Values.persistence.config.existingClaim) }}
    - metadata:
        name: config
      {{- with .Values.persistence.config.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.config.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.config.size | quote }}
      {{- if .Values.persistence.config.storageClass }}
      {{- if (eq "-" .Values.persistence.config.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.config.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
{{- end }}
